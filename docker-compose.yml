version: "3"

services:
  ################
  # db #
  ################
  db:
    container_name: postgrest-db
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
    volumes:
      # anything in initdb directory is created in the database
      # see "How to extend this image" section at https://hub.docker.com/r/_/postgres/
      - "./db/initdb:/docker-entrypoint-initdb.d"
    networks:
      - api
    restart: always

  ##################
  # postgrest-demo #
  ##################
  # postgrest:
  #   container_name: postgrest-demo
  #   image: nginx:mainline-alpine
  #   ports:
  #     - "80:80"
  #   volumes:
  #     # anything in html directory is hosted via nginx
  #     - "./html:/usr/share/nginx/html"
  #   restart: always

  #############
  # postgrest #
  #############
  postgrest:
    container_name: postgrest
    image: postgrest/postgrest:latest
    ports:
      - "3000:3000"
    # Available environment variables documented here:
    # https://postgrest.org/en/latest/configuration.html#environment-variables
    environment:
      # The standard connection URI format, documented at
      # https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      # The name of which database schema to expose to REST clients
      - PGRST_DB_SCHEMA=${DB_SCHEMA}
      # The database role to use when no client authentication is provided
      - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE}
      # Overrides the base URL used within the OpenAPI self-documentation hosted at the API root path
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:3000
    networks:
      - api
    restart: always
  ################
  # postgraphile #
  ################
  graphile:
    container_name: graphile
    image: graphile/postgraphile:latest
    restart: always
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - api
    ports:
      - 5433:5433
    command: [
        "--connection",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}",
        "--port",
        "5433",
        "--schema",
        "public",
        "--enhance-graphiql",
        # "--append-plugins",
        # "postgraphile-plugin-connection-filter,custom-plugin",
      ]
  ###########
  # pgadmin #
  ###########
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      - db
  ###########
  # swagger #
  ###########
  swagger-ui:
    container_name: swagger-ui
    image: swaggerapi/swagger-ui:latest
    ports:
      - "8080:8080"
    environment:
      - API_URL=http://localhost:3000/
    restart: always

networks:
  api:
    driver: bridge
