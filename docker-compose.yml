version: "3"

services:
  ##################
  # Nginx service #
  ##################
  nginx:
    container_name: nginx
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - rest
    networks:
      - api
    restart: always
  ################
  # db #
  ################
  db:
    container_name: postgres
    image: postgres:13-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - DB_ANON_ROLE=${DB_ANON_ROLE}
      - DB_SCHEMA=${DB_SCHEMA}
    volumes:
      - "./db/initdb:/docker-entrypoint-initdb.d"
    networks:
      - api
    restart: always

  #############
  # postgrest #
  #############
  rest:
    container_name: postgrest
    image: postgrest/postgrest:latest
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - PGRST_DB_SCHEMA=${DB_SCHEMA}
      - PGRST_DB_ANON_ROLE=${DB_ANON_ROLE}
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:3000
    networks:
      - api
    restart: always
  ################
  # postgraphile #
  ################
  postgraphile:
    container_name: postgraphile
    image: graphile/postgraphile:latest
    restart: always
    env_file:
      - ./.env
    depends_on:
      - db
    networks:
      - api
    command:
      [
        "--connection",
        "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}",
        "--schema",
        "public",
        "--enhance-graphiql",
      ]
  ###########
  # pgadmin #
  ###########
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@example.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   ports:
  #     - "8081:8081"
  #   networks:
  #     - api
  #   depends_on:
  #     - db
  ###########
  # swagger #
  ###########
  swagger:
    container_name: swagger
    image: swaggerapi/swagger-ui:latest
    environment:
      - API_URL=http://localhost/api
    restart: always
    networks:
      - api
  #######
  # ELK #
  #######
  elasticsearch:
    extends:
      file: es-services.yml
      service: elasticsearch
  es-indexer:
    extends:
      file: es-services.yml
      service: es-indexer
networks:
  api:
    driver: bridge
